<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dabin.dao.BlogMapper">
    <update id="updateBlog" parameterType="com.dabin.dto.BlogAddRequest">
        update blog
        <set>
            <if test="categoryId != null">
                category_id=#{categoryId,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                title=#{title,jdbcType=VARCHAR},
            </if>
            <if test="summary != null">
                summary=#{summary,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                author=#{author,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                code=#{code,jdbcType=INTEGER},
            </if>
            <if test="imgUrl != null">
                img_url=#{imgUrl,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content=#{content},
            </if>
            <if test="blogStatus != null">
                blog_status=#{blogStatus}
            </if>
        </set>
        where id=#{id}
    </update>
    <update id="updateBlogCount">
        update blog
        <set>
            <if test="type=='comment'">
                comment_count = comment_count+1
            </if>
            <if test="type=='view'">
                view_count = view_count+1
            </if>
        </set>
        where id = #{blogId}
    </update>
    <select id="selectBlogs" resultType="com.dabin.entity.Blog">

        SELECT
        t.id,t.title,t.author,
        t.img_url as imgUrl,
        t.summary,content,t.html_content as htmlContent,
        t.code,t.create_time as createTime,t.update_time updateTime,
        t.view_count as viewCount,t.blog_status blogStatus,
        t.vote_count as voteCount
        from blog t
        <if test="tagId != null">
            left join blog_tag b on b.blog_id = t.id
        </if>
        <where>
            <if test="tagId != null">
                b.tag_id=#{tagId}
            </if>
            <if test="categoryId != null and categoryId != 0">
                and t.category_id=#{categoryId}
            </if>
            <if test="status != null">
                and t.blog_status=#{status}
            </if>
        </where>
    </select>
    <select id="selectByIdAndStatus" resultType="com.dabin.entity.BlogWithBLOBs">
        SELECT
        id,title,author,
        img_url as imgUrl,
        category_id as categoryId,
        blog_catalog as blogCatalog,
        summary,content,html_content as htmlContent,
        code,create_time as createTime,
        view_count as viewCount,blog_status blogStatus
        from blog
        <where>
            <if test="id != null">
                id=#{id}
            </if>
            <if test="blogStatus != null">
                and blog_status=#{blogStatus}
            </if>
        </where>
    </select>
    <select id="selectLastOrNext" resultType="com.dabin.entity.Blog">
        SELECT
        id,title,
        img_url as imgUrl,
        summary,content,
        code,create_time as createTime,
        view_count as viewCount,blog_status blogStatus
        from blog
        <where>
            <choose>
                <when test="!isLast">
                     id &gt; #{id} and blog_status = 1 order by id asc
                </when>
                <otherwise>
                     id &lt; #{id} and blog_status = 1 order by id desc
                </otherwise>
            </choose>
        </where>
        LIMIT 1
    </select>
    <select id="selectHotOrRecommendBlogs" resultType="com.dabin.vo.BlogDetail4UserVO">
        SELECT
        id,title,
        img_url as imgUrl,
        summary,content,
        code,create_time as createTime,update_time updateTime,
        view_count as viewCount,blog_status blogStatus
        from blog
        <where>
            blog_status=1
            <if test="code == 2">
                and code= #{code}
            </if>

        </where>
        <if test="code == 1">
            order by view_count desc
        </if>
        limit #{limit}

    </select>

    <insert id="batchInsert" parameterType="java.util.List">
        insert into blog(id, vote_count) values
        <foreach collection="blogList" item="blog" separator=",">
            (#{blog.id}, #{blog.voteCount})
        </foreach>
        on duplicate key update vote_count = VALUES(vote_count)
    </insert>
</mapper>
