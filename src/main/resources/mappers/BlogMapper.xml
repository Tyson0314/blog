<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dabin.dao.BlogMapper">
  <resultMap id="BaseResultMap" type="com.dabin.entity.Blog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="summary" jdbcType="VARCHAR" property="summary" />
    <result column="img_url" jdbcType="VARCHAR" property="imgUrl" />
    <result column="blog_catalog" jdbcType="VARCHAR" property="blogCatalog" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="code" jdbcType="INTEGER" property="code" />
    <result column="view_count" jdbcType="INTEGER" property="viewCount" />
    <result column="vote_count" jdbcType="INTEGER" property="voteCount" />
    <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="blog_status" jdbcType="TINYINT" property="blogStatus" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.dabin.entity.BlogWithBLOBs">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="html_content" jdbcType="LONGVARCHAR" property="htmlContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, category_id, title, summary, img_url, blog_catalog, author, code, view_count,
    vote_count, comment_count, create_time, update_time, blog_status
  </sql>
  <sql id="Blob_Column_List">
    content, html_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.dabin.entity.BlogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.dabin.entity.BlogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dabin.entity.BlogExample">
    delete from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dabin.entity.BlogWithBLOBs">
    insert into blog (id, category_id, title,
      summary, img_url, blog_catalog,
      author, code, view_count,
      vote_count, comment_count, create_time,
      update_time, blog_status, content,
      html_content)
    values (#{id,jdbcType=INTEGER}, #{categoryId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR},
      #{summary,jdbcType=VARCHAR}, #{imgUrl,jdbcType=VARCHAR}, #{blogCatalog,jdbcType=VARCHAR},
      #{author,jdbcType=VARCHAR}, #{code,jdbcType=INTEGER}, #{viewCount,jdbcType=INTEGER},
      #{voteCount,jdbcType=INTEGER}, #{commentCount,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP}, #{blogStatus,jdbcType=TINYINT}, #{content,jdbcType=LONGVARCHAR},
      #{htmlContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyProperty="id" useGeneratedKeys="true" parameterType="com.dabin.entity.BlogWithBLOBs">
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="summary != null">
        summary,
      </if>
      <if test="imgUrl != null">
        img_url,
      </if>
      <if test="blogCatalog != null">
        blog_catalog,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="viewCount != null">
        view_count,
      </if>
      <if test="voteCount != null">
        vote_count,
      </if>
      <if test="commentCount != null">
        comment_count,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="blogStatus != null">
        blog_status,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="htmlContent != null">
        html_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl != null">
        #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="blogCatalog != null">
        #{blogCatalog,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=INTEGER},
      </if>
      <if test="viewCount != null">
        #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="voteCount != null">
        #{voteCount,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="blogStatus != null">
        #{blogStatus,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="htmlContent != null">
        #{htmlContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dabin.entity.BlogExample" resultType="java.lang.Long">
    select count(*) from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update blog
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.categoryId != null">
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.summary != null">
        summary = #{record.summary,jdbcType=VARCHAR},
      </if>
      <if test="record.imgUrl != null">
        img_url = #{record.imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.blogCatalog != null">
        blog_catalog = #{record.blogCatalog,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=INTEGER},
      </if>
      <if test="record.viewCount != null">
        view_count = #{record.viewCount,jdbcType=INTEGER},
      </if>
      <if test="record.voteCount != null">
        vote_count = #{record.voteCount,jdbcType=INTEGER},
      </if>
      <if test="record.commentCount != null">
        comment_count = #{record.commentCount,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.blogStatus != null">
        blog_status = #{record.blogStatus,jdbcType=TINYINT},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.htmlContent != null">
        html_content = #{record.htmlContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update blog
    set id = #{record.id,jdbcType=INTEGER},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      summary = #{record.summary,jdbcType=VARCHAR},
      img_url = #{record.imgUrl,jdbcType=VARCHAR},
      blog_catalog = #{record.blogCatalog,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=INTEGER},
      view_count = #{record.viewCount,jdbcType=INTEGER},
      vote_count = #{record.voteCount,jdbcType=INTEGER},
      comment_count = #{record.commentCount,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      blog_status = #{record.blogStatus,jdbcType=TINYINT},
      content = #{record.content,jdbcType=LONGVARCHAR},
      html_content = #{record.htmlContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update blog
    set id = #{record.id,jdbcType=INTEGER},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      summary = #{record.summary,jdbcType=VARCHAR},
      img_url = #{record.imgUrl,jdbcType=VARCHAR},
      blog_catalog = #{record.blogCatalog,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=INTEGER},
      view_count = #{record.viewCount,jdbcType=INTEGER},
      vote_count = #{record.voteCount,jdbcType=INTEGER},
      comment_count = #{record.commentCount,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      blog_status = #{record.blogStatus,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dabin.entity.Blog">
    update blog
    <set>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl != null">
        img_url = #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="blogCatalog != null">
        blog_catalog = #{blogCatalog,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=INTEGER},
      </if>
      <if test="viewCount != null">
        view_count = #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="voteCount != null">
        vote_count = #{voteCount,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        comment_count = #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="blogStatus != null">
        blog_status = #{blogStatus,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="htmlContent != null">
        html_content = #{htmlContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.dabin.entity.BlogWithBLOBs">
    update blog
    set category_id = #{categoryId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      img_url = #{imgUrl,jdbcType=VARCHAR},
      blog_catalog = #{blogCatalog,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      code = #{code,jdbcType=INTEGER},
      view_count = #{viewCount,jdbcType=INTEGER},
      vote_count = #{voteCount,jdbcType=INTEGER},
      comment_count = #{commentCount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      blog_status = #{blogStatus,jdbcType=TINYINT},
      content = #{content,jdbcType=LONGVARCHAR},
      html_content = #{htmlContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dabin.entity.Blog">
    update blog
    set category_id = #{categoryId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      img_url = #{imgUrl,jdbcType=VARCHAR},
      blog_catalog = #{blogCatalog,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      code = #{code,jdbcType=INTEGER},
      view_count = #{viewCount,jdbcType=INTEGER},
      vote_count = #{voteCount,jdbcType=INTEGER},
      comment_count = #{commentCount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      blog_status = #{blogStatus,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
